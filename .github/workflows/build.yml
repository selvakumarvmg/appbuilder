name: build-macos

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: 🛠️ Build macOS x86_64 App
    runs-on: macos-13  # ✅ Intel-based macOS runner

    steps:
    - name: 🧾 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python 3.9 (x86_64)
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"
        architecture: "x64"

    - name: 🧪 Print system & CPU info
      run: |
        echo "🔍 Python version:" && python --version
        echo "🔍 Architecture:" && uname -m
        echo "🔍 CPU Info:" && sysctl -n machdep.cpu.brand_string
        echo "🔍 macOS Version:" && sw_vers

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install "pyinstaller>=6.14,<7" dmgbuild
        echo "📦 Installed Python packages:"
        pip list

    - name: 🖼️ Verify background image
      run: |
        echo "🖼️ Checking background image type:"
        file installer-assets/dmg-background.bmp || true

    - name: 📂 Show working directory contents
      run: |
        echo "📂 Working dir: $PWD"
        ls -alh

    - name: 📜 Show app.spec file
      run: |
        echo "------ BEGIN app.spec ------"
        cat app.spec
        echo "------ END app.spec ------"

    - name: 🚀 Build with PyInstaller
      run: |
        echo "🚀 Building app with PyInstaller..."
        pyinstaller app.spec
        echo "📁 dist/ directory contents:"
        ls -lh dist
    
    - name: 🔬 Check binary architecture
      run: |
        file dist/PremediaApp.app/Contents/MacOS/PremediaApp || echo "Binary not found"

    - name: 🧹 Clean quarantine & sign app
      run: |
        echo "🧹 Removing quarantine attribute..."
        xattr -rd com.apple.quarantine dist/PremediaApp.app || true
        echo "🔏 Signing app (ad-hoc)..."
        codesign --deep --force --verbose --sign - dist/PremediaApp.app

    - name: 🕵️ Inspect .app bundle
      run: |
        echo "=== PremediaApp.app structure ==="
        du -sh dist/PremediaApp.app
        find dist/PremediaApp.app

    - name: 📦 Copy .app to dmg-build folder
      run: |
        mkdir -p dmg-build
        cp -R dist/PremediaApp.app dmg-build/
        echo "✅ Copied:"
        du -sh dmg-build/PremediaApp.app
        ls -lh dmg-build

    - name: 💿 Build DMG
      run: |
        echo "💿 Creating DMG using dmgbuild..."
        dmgbuild -s installer/dmg-settings.py \
                 -D app_path="dmg-build/PremediaApp.app" \
                 "PremediaApp" PremediaApp.dmg
        echo "✅ DMG created:"
        ls -lh PremediaApp.dmg

    - name: 🧪 Verify DMG mount (optional)
      run: |
        echo "🔍 Mounting DMG to inspect contents..."
        hdiutil attach PremediaApp.dmg
        sleep 3
        ls /Volumes/PremediaApp || echo "❌ Could not mount DMG"
        hdiutil detach /Volumes/PremediaApp || true

    - name: 📏 Final artifact sizes
      run: |
        echo "📦 Final sizes:"
        du -sh dist/PremediaApp.app || true
        du -sh PremediaApp.dmg || true

    - name: ⬆️ Upload DMG
      uses: actions/upload-artifact@v4
      with:
        name: PremediaApp-macos-dmg
        path: PremediaApp.dmg

    - name: ⬆️ Upload build logs & .app
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          dist/PremediaApp.app
          build/
