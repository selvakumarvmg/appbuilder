name: Build PremediaApp macOS DMG

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-14

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🛠️ Install Xcode Command Line Tools
        run: |
          if ! xcode-select -p; then
            sudo xcode-select --install
          fi

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller PySide6 dmgbuild

      - name: 🧪 Verify Installations
        run: |
          python -c "import PySide6; print('✅ PySide6:', PySide6.__version__)"
          python -c "import PIL; print('✅ Pillow:', PIL.__version__)"
          which dmgbuild && dmgbuild --version || echo "⚠️ dmgbuild not found"

      - name: 🛠️ Build App with PyInstaller
        run: |
          pyinstaller --clean --noconfirm app.spec --log-level DEBUG > pyinstaller.log 2>&1
          cat pyinstaller.log
          if [ ! -d "dist/PremediaApp.app" ]; then
            echo "❌ App not built correctly!"
            exit 1
          fi

      - name: 🧹 Remove Invalid Code Signature
        run: |
          rm -rf dist/PremediaApp.app/Contents/_CodeSignature || true

      - name: ❌ Remove Quarantine Attribute
        run: |
          xattr -rd com.apple.quarantine dist/PremediaApp.app || true

      - name: 🔏 Sign App (Optional - Requires Secrets)
        if: env.CODESIGN_IDENTITY != ''
        run: |
          codesign --force --deep --sign "$CODESIGN_IDENTITY" dist/PremediaApp.app
          codesign --verify --deep --strict --verbose=2 dist/PremediaApp.app
        env:
          CODESIGN_IDENTITY: ${{ secrets.CODESIGN_IDENTITY }}

      - name: 💽 Create DMG
        run: |
          mkdir -p dmg-build
          cp -R dist/PremediaApp.app dmg-build/

          dmgbuild -s installer/dmg-settings.py \
                   -D app="PremediaApp" \
                   "PremediaApp" \
                   "dmg-build/PremediaApp.dmg" > hdiutil.log 2>&1 || {
                      echo "❌ dmgbuild failed"
                      cat hdiutil.log
                      exit 1
                   }

      - name: 📤 Upload DMG Artifact
        uses: actions/upload-artifact@v4
        with:
          name: PremediaApp-macos-dmg
          path: dmg-build/PremediaApp.dmg

      - name: 📤 Upload Build Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: macos-logs
          path: |
            pyinstaller.log
            hdiutil.log
