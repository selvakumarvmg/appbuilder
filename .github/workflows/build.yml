name: Build PremediaApp

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Verify repository files
        run: |
          if (-not (Test-Path "icons\premedia.ico") -or -not (Test-Path "terms.txt") -or -not (Test-Path "license.txt")) {
              Write-Output "One or more files missing"
              exit 1
          }

      - name: Install core dependencies
        timeout-minutes: 20
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: List installed packages
        run: pip list

      - name: Install PyInstaller
        run: |
          pip install pyinstaller==6.14.1

      - name: Build with PyInstaller
        timeout-minutes: 60
        run: |
          pyinstaller --noconfirm --onefile --windowed --icon=icons/premedia.ico --debug=all app.py

      - name: Check if PremediaApp.exe exists
        run: |
          if (-not (Test-Path "dist\PremediaApp.exe")) {
              Write-Output "PremediaApp.exe not found in dist"
              exit 1
          }

      - name: Package Windows installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: installer/installer.iss

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PremediaApp-Windows-${{ matrix.python-version }}
          path: Output/PremediaApp-Setup.exe
          retention-days: 5

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Verify repository files
        run: |
          ls -l icons/premedia.icns terms.txt license.txt || echo "One or more files missing"

      - name: Install dependencies
        env:
          ARCHFLAGS: "-arch x86_64 -arch arm64"
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install --force-reinstall --no-binary cffi cffi==1.17.1
          pip install --force-reinstall --no-binary Pillow Pillow==11.3.0

      - name: List installed packages
        run: pip list

      - name: Install PyInstaller
        run: |
          pip install pyinstaller==6.14.1

      - name: Clean dist directory
        run: |
          rm -rf dist
        continue-on-error: true

      - name: Build with PyInstaller
        timeout-minutes: 60
        run: |
          pyinstaller --noconfirm --windowed --icon=icons/premedia.icns --debug=all app.py

      # Optional: Sign the application (requires developer certificate)
      # - name: Sign macOS App
      #   run: |
      #     codesign -f -s "${{ secrets.APPLE_DEVELOPER_ID }}" --deep dist/PremediaApp.app
      #   env:
      #     APPLE_DEVELOPER_ID: ${{ secrets.APPLE_DEVELOPER_ID }}

      # Optional: Notarize the application (requires Apple ID and password)
      # - name: Notarize macOS App
      #   run: |
      #     xcrun altool --notarize-app -f dist/PremediaApp.app --primary-bundle-id com.vmgpremedia.PremediaApp -u "${{ secrets.APPLE_ID }}" -p "${{ secrets.APPLE_PASSWORD }}"
      #   env:
      #     APPLE_ID: ${{ secrets.APPLE_ID }}
      #     APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}

      - name: Create DMG
        run: |
          create-dmg \
            --volname "PremediaApp" \
            --volicon "icons/premedia.icns" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "PremediaApp.app" 200 190 \
            --app-drop-link 600 185 \
            Output/PremediaApp.dmg \
            dist || echo "create-dmg failed, check logs"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PremediaApp-macOS
          path: Output/PremediaApp.dmg
          retention-days: 5

  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install system dependencies
        timeout-minutes: 20
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev python3-pip libgtk-3-dev dpkg-dev

      - name: Verify repository files
        run: |
          ls -l icons/premedia.png terms.txt license.txt || echo "One or more files missing"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: List installed packages
        run: pip list

      - name: Install PyInstaller
        run: |
          pip install pyinstaller==6.14.1

      - name: Build with PyInstaller
        timeout-minutes: 60
        run: |
          pyinstaller --noconfirm --onefile --windowed --icon=icons/premedia.png --debug=all app.py

      - name: Create .deb package
        run: |
          mkdir -p Output
          # Placeholder for .deb creation steps; adjust as needed
          mv dist/PremediaApp Output/PremediaApp.deb

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PremediaApp-Ubuntu
          path: Output/PremediaApp.deb
          retention-days: 5