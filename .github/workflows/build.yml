name: Build Notifier App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
          choco install nsis -y

      - name: Build Windows executable
        run: |
          pyinstaller --onefile --windowed --icon=pm.ico --name=notifier app.py

      - name: Create NSIS installer
        run: |
          echo 'OutFile "notifier_installer.exe"
          InstallDir "$PROGRAMFILES\\Notifier"
          Page directory
          Page instfiles
          Section "Install"
          SetOutPath "$INSTDIR"
          File "dist\\notifier.exe"
          CreateShortcut "$DESKTOP\\Notifier.lnk" "$INSTDIR\\notifier.exe"
          CreateDirectory "$SMPROGRAMS\\Notifier"
          CreateShortcut "$SMPROGRAMS\\Notifier\\Notifier.lnk" "$INSTDIR\\notifier.exe"
          SectionEnd' > installer.nsi
          makensis installer.nsi

      - name: Upload Windows installer
        uses: actions/upload-artifact@v4
        with:
          name: notifier-windows-installer
          path: notifier_installer.exe

  build-ubuntu:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y fakeroot dpkg-dev
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt

      - name: Build Linux executable
        run: |
          pyinstaller --onefile --windowed --icon=pm.png --name=notifier app.py

      - name: Create .deb package with shortcut
        run: |
          mkdir -p package/DEBIAN
          mkdir -p package/usr/local/bin
          mkdir -p package/usr/share/applications
          mkdir -p package/usr/share/icons

          echo "Package: notifier" > package/DEBIAN/control
          echo "Version: 1.0.0" >> package/DEBIAN/control
          echo "Section: utils" >> package/DEBIAN/control
          echo "Priority: optional" >> package/DEBIAN/control
          echo "Architecture: amd64" >> package/DEBIAN/control
          echo "Maintainer: Your Name <you@example.com>" >> package/DEBIAN/control
          echo "Description: Notifier app built with PySide6" >> package/DEBIAN/control

          cp dist/notifier package/usr/local/bin/notifier
          cp pm.png package/usr/share/icons/notifier.png
          chmod 755 package/usr/local/bin/notifier

          cat <<EOF > package/usr/share/applications/notifier.desktop
          [Desktop Entry]
          Name=Notifier
          Exec=/usr/local/bin/notifier
          Icon=notifier
          Type=Application
          Categories=Utility;
          Terminal=false
          EOF

          dpkg-deb --build package
          mv package.deb notifier_1.0.0_amd64.deb

      - name: Upload Debian package
        uses: actions/upload-artifact@v4
        with:
          name: notifier-ubuntu-deb
          path: notifier_1.0.0_amd64.deb

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt

      - name: Build macOS app bundle
        run: |
          pyinstaller --onefile --windowed --icon=pm.icns --name=notifier app.py

      - name: Create .app structure and .dmg
        run: |
          mkdir -p dmg/Notifier.app/Contents/MacOS
          mkdir -p dmg/Notifier.app/Contents/Resources
          cp dist/notifier dmg/Notifier.app/Contents/MacOS/notifier
          cp pm.icns dmg/Notifier.app/Contents/Resources/pm.icns

          cat <<EOF > dmg/Notifier.app/Contents/Info.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
          "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>CFBundleName</key>
            <string>Notifier</string>
            <key>CFBundleIdentifier</key>
            <string>com.yourdomain.notifier</string>
            <key>CFBundleVersion</key>
            <string>1.0.0</string>
            <key>CFBundleExecutable</key>
            <string>notifier</string>
            <key>CFBundleIconFile</key>
            <string>pm.icns</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
          </dict>
          </plist>
          EOF

          ln -s /Applications dmg/Applications
          hdiutil create -volname "Notifier" -srcfolder dmg -ov -format UDZO notifier-1.0.0.dmg

      - name: Upload macOS dmg
        uses: actions/upload-artifact@v4
        with:
          name: notifier-macos-dmg
          path: notifier-1.0.0.dmg
