name: Build PremediaApp Installers

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug Git Status
      run: |
        echo === Git Repository Details ===
        git status
        git log -n 1
        echo === Current Directory ===
        dir
      shell: cmd

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9.13'

    - name: Install dependencies with debug
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        pip list > installed_packages.txt
        type installed_packages.txt
      shell: cmd

    - name: Verify required files
      run: |
        if not exist app.spec (echo ERROR: app.spec missing && exit 1)
        if not exist installer\\installer.iss (echo ERROR: installer.iss missing && exit 1)
        dir icons
        dir installer
        type app.spec
      shell: cmd

    - name: Build with PyInstaller
      run: |
        pyinstaller --noconfirm app.spec > pyinstaller.log 2>&1
        if %errorlevel% neq 0 (
          echo ERROR: PyInstaller build failed
          type pyinstaller.log
          exit 1
        )
        type pyinstaller.log
      shell: cmd

    - name: Upload PyInstaller log
      uses: actions/upload-artifact@v4
      with:
        name: pyinstaller-log-windows
        path: pyinstaller.log
      if: always()

    - name: Check Build Output
      run: |
        dir dist
        dir dist\\PremediaApp
      shell: cmd

    - name: Upload Windows Build Directory
      uses: actions/upload-artifact@v4
      with:
        name: PremediaApp-Windows-Build
        path: dist\PremediaApp
      if: always()

    - name: Install Inno Setup
      run: |
        choco install innosetup --no-progress --yes --force
        if %errorlevel% neq 0 (
          echo ERROR: Failed to install Inno Setup
          exit 1
        )
        where iscc || (
          echo ERROR: ISCC compiler not found in PATH!
          exit 1
        )
      shell: cmd

    - name: Build Installer with Inno Setup
      run: |
        iscc installer\\installer.iss > inno.log 2>&1
        if %errorlevel% neq 0 (
          echo ERROR: Inno Setup failed!
          type inno.log
          exit 1
        )
        type inno.log
        if not exist Output\\PremediaApp-Setup.exe (
          echo ERROR: Installer not created
          dir Output
          exit 1
        )
      shell: cmd

    - name: Upload Inno Setup log
      uses: actions/upload-artifact@v4
      with:
        name: inno-log-windows
        path: inno.log
      if: always()

    - name: Upload Windows Installer
      uses: actions/upload-artifact@v4
      with:
        name: PremediaApp-Windows-Installer
        path: Output\PremediaApp-Setup.exe
      if: always()

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Debug Git Status
      run: |
        git status
        git log -n 1
        ls -la
      shell: bash

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies with debug
      run: |
        python3 -m pip install --upgrade pip
        pip3 install -r requirements.txt
        pip3 install pyinstaller
        pip3 list > installed_packages.txt
        cat installed_packages.txt
      shell: bash

    - name: Verify required files
      run: |
        [ ! -f app.spec ] && echo "ERROR: app.spec missing" && exit 1
        [ ! -d icons ] && echo "ERROR: icons directory missing" && exit 1
        cat app.spec
      shell: bash

    - name: Build with PyInstaller
      run: |
        pyinstaller --noconfirm app.spec > pyinstaller.log 2>&1
        if [ $? -ne 0 ]; then
          echo "ERROR: PyInstaller build failed"
          cat pyinstaller.log
          exit 1
        fi
        cat pyinstaller.log
      shell: bash

    - name: Upload PyInstaller log
      uses: actions/upload-artifact@v4
      with:
        name: pyinstaller-log-macos
        path: pyinstaller.log
      if: always()

    - name: Check .app Bundle
      run: |
        ls -la dist/PremediaApp
        [ ! -d "dist/PremediaApp/PremediaApp.app" ] && echo "ERROR: .app bundle not found!" && exit 1
      shell: bash

    - name: Create DMG Image
      run: |
        mkdir -p dmg-content
        cp -R dist/PremediaApp/PremediaApp.app dmg-content/
        cp icons/premedia.icns dmg-content/.VolumeIcon.icns
        mkdir -p dmg
        hdiutil create dmg/PremediaApp.dmg -volname "PremediaApp" -fs HFS+ -srcfolder dmg-content -ov > hdiutil.log 2>&1
        if [ $? -ne 0 ]; then
          echo "ERROR: DMG creation failed"
          cat hdiutil.log
          exit 1
        fi
        cat hdiutil.log
      shell: bash

    - name: Upload hdiutil Log
      uses: actions/upload-artifact@v4
      with:
        name: hdiutil-log-macos
        path: hdiutil.log
      if: always()

    - name: Upload macOS DMG
      uses: actions/upload-artifact@v4
      with:
        name: PremediaApp-macOS-DMG
        path: dmg/PremediaApp.dmg
      if: always()
