name: Build and Package PremediaApp

on:
  push:
    branches: [main]

env:
  APP_NAME: PremediaApp
  APP_VERSION: 1.0.0

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential fakeroot dpkg-dev libgl1
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller --noconfirm --windowed --onefile --icon=pm.png --name=${{ env.APP_NAME }} app.py

      - name: Prepare DEB package structure
        run: |
          mkdir -p package-root/DEBIAN
          mkdir -p package-root/usr/local/bin
          mkdir -p package-root/usr/share/applications
          mkdir -p package-root/usr/share/icons/hicolor/128x128/apps

          cp dist/${{ env.APP_NAME }} package-root/usr/local/bin/
          cp ${{ env.APP_NAME }}.desktop package-root/usr/share/applications/
          cp pm.png package-root/usr/share/icons/hicolor/128x128/apps/premediaapp.png

          echo "Package: ${{ env.APP_NAME }}" > package-root/DEBIAN/control
          echo "Version: ${{ env.APP_VERSION }}" >> package-root/DEBIAN/control
          echo "Section: base" >> package-root/DEBIAN/control
          echo "Priority: optional" >> package-root/DEBIAN/control
          echo "Architecture: amd64" >> package-root/DEBIAN/control
          echo "Depends: python3" >> package-root/DEBIAN/control
          echo "Maintainer: VMG DIGITAL PVT LTD" >> package-root/DEBIAN/control
          echo "Description: PremediaApp is a media asset management and conversion tool." >> package-root/DEBIAN/control

      - name: Build .deb package
        run: |
          dpkg-deb --build package-root
          mv package-root.deb ${{ env.APP_NAME }}_${{ env.APP_VERSION }}_amd64.deb

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: premediaapp-deb
          path: ${{ env.APP_NAME }}_*.deb

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build Windows EXE
        run: |
          pyinstaller --noconfirm --windowed --onefile --icon=pm.ico --name=${{ env.APP_NAME }} app.py

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: premediaapp-windows
          path: dist/${{ env.APP_NAME }}.exe

  build-macos:
    runs-on: macos-latest

    env:
      APP_NAME: PremediaApp
      APP_VERSION: 1.0.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build macOS .app using PyInstaller
        run: |
          pyinstaller --noconfirm --windowed --name="${APP_NAME}" \
            --icon=pm.icns app.py

      - name: Show app structure
        run: |
          ls -R dist/${APP_NAME}.app

      - name: Upload macOS .app bundle
        uses: actions/upload-artifact@v4
        with:
          name: premediaapp-macos
          path: dist/${{ env.APP_NAME }}.app
