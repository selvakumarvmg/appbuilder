name: build-macos

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: 🛠️ Build macOS x86_64 App
    runs-on: macos-13  # ✅ Intel-based GitHub runner

    steps:
    - name: 🧾 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python 3.9 (x64)
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"
        architecture: "x64"

    - name: 🔍 Verify Python environment
      run: |
        echo "🔍 Python version:" && python --version
        echo "🔍 Python executable:" && which python
        echo "🔍 Python architecture:" && python -c "import platform; print(platform.machine())"
        echo "🔍 Interpreter binary:" && file $(which python)

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install "pyinstaller==6.4.0" "dmgbuild==1.6.1"
        echo "📦 Installed packages:"
        pip list

    - name: 🖼️ Verify background image
      run: |
        echo "🖼️ Checking DMG background image:"
        file installer-assets/dmg-background.bmp || true

    - name: 📂 Show working directory
      run: |
        echo "📂 Current working directory:"
        pwd
        ls -lah

    - name: 📜 Show app.spec file
      run: |
        echo "------ BEGIN app.spec ------"
        cat app.spec
        echo "------ END app.spec ------"

    - name: 🚀 Build with PyInstaller
      run: |
        echo "🛠️ Removing problematic Qt plugins..."
        find $(python -c 'import PySide6; print(PySide6.__path__[0])') -name "*qsqlodbc*" -delete || true

        echo "🚀 Building app with PyInstaller..."
        ( while true; do echo "⏳ Still building..."; sleep 60; done ) &
        KEEP_ALIVE=$!
        pyinstaller app.spec || (kill $KEEP_ALIVE && exit 1)
        kill $KEEP_ALIVE

        echo "📁 dist/ directory contents:"
        ls -lh dist

    - name: 🧪 Verify app binary architecture
      run: |
        echo "🔍 Binary architecture:"
        file dist/PremediaApp.app/Contents/MacOS/PremediaApp || echo "⚠️ Binary not found"
        lipo -info dist/PremediaApp.app/Contents/MacOS/PremediaApp || true

    - name: 🔏 Codesign and remove quarantine
      run: |
        echo "🧹 Removing quarantine..."
        xattr -rd com.apple.quarantine dist/PremediaApp.app || true

        echo "🔏 Ad-hoc codesigning..."
        codesign --deep --force --verbose --sign - dist/PremediaApp.app

        echo "✅ Code signature info:"
        codesign -dvvv dist/PremediaApp.app || true

    - name: 🕵️ Inspect .app bundle structure
      run: |
        echo "=== .app Contents ==="
        du -sh dist/PremediaApp.app
        find dist/PremediaApp.app

    - name: 📦 Copy .app to dmg-build folder
      run: |
        mkdir -p dmg-build
        cp -R dist/PremediaApp.app dmg-build/
        echo "✅ Copied .app to dmg-build:"
        ls -lh dmg-build

    - name: 💿 Build DMG
      run: |
        echo "💿 Creating DMG using dmgbuild..."
        dmgbuild -s installer/dmg-settings.py \
                 -D app_path="dmg-build/PremediaApp.app" \
                 "PremediaApp" PremediaApp.dmg
        echo "✅ DMG created:"
        ls -lh PremediaApp.dmg

    - name: 🧪 Verify DMG mount (optional)
      run: |
        echo "🔍 Mounting DMG..."
        hdiutil attach PremediaApp.dmg
        sleep 3
        ls /Volumes/PremediaApp || echo "❌ Could not mount DMG"
        hdiutil detach /Volumes/PremediaApp || true

    - name: 📏 Final artifact sizes
      run: |
        du -sh dist/PremediaApp.app || true
        du -sh PremediaApp.dmg || true

    - name: ⬆️ Upload DMG
      uses: actions/upload-artifact@v4
      with:
        name: PremediaApp-macos-dmg
        path: PremediaApp.dmg

    - name: ⬆️ Upload build logs & app bundle
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          dist/PremediaApp.app
          build/
