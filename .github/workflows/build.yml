name: Build Windows Installer

on:
  push:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller PySide6 pillow tzdata
      shell: powershell
      continue-on-error: false

    - name: Verify UPX availability
      run: |
        if (Get-Command upx -ErrorAction SilentlyContinue) {
          Write-Output "UPX is available."
        } else {
          Write-Warning "UPX not found. PyInstaller may fail if upx=True in app.spec."
        }
      shell: powershell

    - name: Verify app.spec contents
      run: |
        Write-Output "Contents of app.spec:"
        Get-Content app.spec
      shell: powershell

    - name: Build EXE with PyInstaller
      run: |
        Set-Location $env:GITHUB_WORKSPACE
        pyinstaller app.spec --clean --noconfirm --onefile
        if ($LASTEXITCODE -ne 0) {
          Write-Error "PyInstaller build failed with exit code $LASTEXITCODE"
          exit $LASTEXITCODE
        }
      shell: powershell

    - name: Show dist directory
      run: |
        Set-Location $env:GITHUB_WORKSPACE
        Write-Output "Listing contents of dist directory:"
        Get-ChildItem -Path dist -Recurse -Force | Format-Table -Property Name, Length, LastWriteTime -AutoSize
        Write-Output "Checking for PremediaApp.exe:"
        $exePath = "dist\PremediaApp.exe"
        $retryCount = 3
        $found = $false
        for ($i = 1; $i -le $retryCount; $i++) {
          if (Test-Path $exePath -PathType Leaf) {
            Write-Output "PremediaApp.exe found at $exePath"
            $found = $true
            break
          } else {
            Write-Output "Attempt $i of $retryCount: PremediaApp.exe not found at $exePath"
            Start-Sleep -Seconds 2
          }
        }
        if (-not $found) {
          Write-Error "PremediaApp.exe not found in dist/ after $retryCount attempts"
          exit 1
        }
      shell: powershell

    - name: Set up Inno Setup
      uses: Minionguyjpro/Inno-Setup-Action@v1.2.2

    - name: Build Installer with Inno Setup
      run: |
        Set-Location $env:GITHUB_WORKSPACE
        iscc installer/installer.iss
        if ($LASTEXITCODE -ne 0) {
          Write-Error "Inno Setup compilation failed with exit code $LASTEXITCODE"
          exit $LASTEXITCODE
        }
      shell: powershell

    - name: Upload Installer Artifact
      uses: actions/upload-artifact@v4
      with:
        name: PremediaApp-Installer
        path: Output/PremediaApp-Setup.exe
