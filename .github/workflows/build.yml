name: Build PremediaApp

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  APP_NAME: PremediaApp
  APP_VERSION: 1.0.0
  PUBLISHER: "VMG DIGITAL PVT LTD"
  PUBLISHER_EMAIL: "admin@vmgdigita.com"
  PRIVACY_POLICY: "https://create.vmgdigital.com/privacy-policy.html"
  SUPPORT_EMAIL: "admin@vmgdigita.com"
  SUPPORT_INFO: "Support included"
  LICENSE_TYPE: "Free License"
  JURISDICTION: "Laws of India"
  CONTACT_INFO: "24, 25 & 26, Taylors Rd, Kilpauk, Chennai, Tamil Nadu 600010"

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      APP_NAME: PremediaApp
      APP_VERSION: 1.0.0
      PUBLISHER: "VMG DIGITAL PVT LTD"
      PUBLISHER_EMAIL: "admin@vmgdigita.com"
      PRIVACY_POLICY: "https://create.vmgdigital.com/privacy-policy.html"
      SUPPORT_EMAIL: "admin@vmgdigita.com"
      SUPPORT_INFO: "Support included"
      LICENSE_TYPE: "Free License"
      JURISDICTION: "Laws of India"
      CONTACT_INFO: "24, 25 & 26, Taylors Rd, Kilpauk, Chennai, Tamil Nadu 600010"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --onefile --windowed --icon=pm.ico --name=%APP_NAME% app.py

      - name: List dist folder contents
        shell: pwsh
        run: Get-ChildItem -Path dist

      - name: Download and install Inno Setup Compiler silently
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://jrsoftware.org/download.php/is.exe" -OutFile "issetup.exe"
          Start-Process -FilePath .\issetup.exe -ArgumentList "/VERYSILENT", "/SUPPRESSMSGBOXES", "/NORESTART", "/SP-" -Wait

      - name: Verify Inno Setup Compiler installation
        shell: pwsh
        run: Get-ChildItem "C:\Program Files (x86)\Inno Setup 6"

      - name: Create Inno Setup script with expanded variables
        shell: pwsh
        run: |
          $AppName = "${{ env.APP_NAME }}"
          $AppVersion = "${{ env.APP_VERSION }}"
          $Publisher = "${{ env.PUBLISHER }}"
          $PublisherEmail = "${{ env.PUBLISHER_EMAIL }}"
          $PrivacyPolicy = "${{ env.PRIVACY_POLICY }}"
          $SupportEmail = "${{ env.SUPPORT_EMAIL }}"
          $SupportInfo = "${{ env.SUPPORT_INFO }}"
          $LicenseType = "${{ env.LICENSE_TYPE }}"
          $Jurisdiction = "${{ env.JURISDICTION }}"
          $ContactInfo = "${{ env.CONTACT_INFO }}"

          @"
          [Setup]
          AppName=$AppName
          AppVersion=$AppVersion
          AppPublisher=$Publisher
          AppPublisherURL=https://vmgdigital.com
          AppSupportURL=https://vmgdigital.com/support
          DefaultDirName={pf}\$AppName
          DefaultGroupName=$AppName
          OutputBaseFilename=${AppName}_Setup_${AppVersion}
          Compression=lzma
          SolidCompression=yes
          Uninstallable=yes
          UninstallDisplayIcon={app}\$AppName.exe
          LicenseFile=TERMS.txt

          [Languages]
          Name: "english"; MessagesFile: "compiler:Default.isl"

          [Tasks]
          Name: "desktopicon"; Description: "Create a &desktop icon"; GroupDescription: "Additional icons:"; Flags: unchecked

          [Files]
          Source: "dist\$AppName.exe"; DestDir: "{app}"; Flags: ignoreversion

          [Icons]
          Name: "{group}\$AppName"; Filename: "{app}\$AppName.exe"
          Name: "{commondesktop}\$AppName"; Filename: "{app}\$AppName.exe"; Tasks: desktopicon

          [Run]
          Filename: "{app}\$AppName.exe"; Description: "Launch $AppName"; Flags: nowait postinstall skipifsilent
          "@ > installer.iss

      - name: Show installer.iss content
        shell: pwsh
        run: Get-Content installer.iss

      - name: Build Windows installer with Inno Setup (verbose)
        shell: pwsh
        run: '"C:\Program Files (x86)\Inno Setup 6\ISCC.exe" /Qp installer.iss'

      - name: List files after installer build
        shell: pwsh
        run: Get-ChildItem -Recurse

      - name: Upload Windows installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: premediaapp-windows-installer
          path: PremediaApp_Setup_1.0.0.exe
