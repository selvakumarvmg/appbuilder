name: Build Notifier App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
          pip install pyinstaller

      - name: Build EXE with PyInstaller
        run: |
          pyinstaller --noconfirm --windowed --icon=pm.ico --name=notifier app.py

      - name: Create Windows installer using NSIS
        run: |
          choco install nsis -y
          echo 'Outfile "notifier-installer.exe"' > installer.nsi
          echo 'InstallDir "$PROGRAMFILES\\Notifier"' >> installer.nsi
          echo 'Page directory' >> installer.nsi
          echo 'Page instfiles' >> installer.nsi
          echo 'Section ""' >> installer.nsi
          echo '  SetOutPath $INSTDIR' >> installer.nsi
          echo '  File "dist\\notifier.exe"' >> installer.nsi
          echo '  CreateShortCut "$DESKTOP\\Notifier.lnk" "$INSTDIR\\notifier.exe"' >> installer.nsi
          echo '  CreateShortCut "$SMPROGRAMS\\Notifier\\Notifier.lnk" "$INSTDIR\\notifier.exe"' >> installer.nsi
          echo '  WriteUninstaller "$INSTDIR\\uninstall.exe"' >> installer.nsi
          echo 'SectionEnd' >> installer.nsi
          echo 'Section "Uninstall"' >> installer.nsi
          echo '  Delete "$INSTDIR\\notifier.exe"' >> installer.nsi
          echo '  Delete "$INSTDIR\\uninstall.exe"' >> installer.nsi
          echo '  RMDir "$INSTDIR"' >> installer.nsi
          echo '  Delete "$DESKTOP\\Notifier.lnk"' >> installer.nsi
          echo '  Delete "$SMPROGRAMS\\Notifier\\Notifier.lnk"' >> installer.nsi
          echo '  RMDir "$SMPROGRAMS\\Notifier"' >> installer.nsi
          echo 'SectionEnd' >> installer.nsi
          makensis installer.nsi

      - name: Upload Windows Installer
        uses: actions/upload-artifact@v4
        with:
          name: notifier-windows-installer
          path: notifier-installer.exe

  build-ubuntu:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y dpkg fakeroot
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
          pip install pyinstaller

      - name: Build EXE
        run: |
          pyinstaller --noconfirm --windowed --icon=pm.png --name=notifier app.py

      - name: Create Debian package
        run: |
          mkdir -p package/DEBIAN package/usr/local/bin
          echo "Package: notifier" > package/DEBIAN/control
          echo "Version: 1.0.0" >> package/DEBIAN/control
          echo "Section: utils" >> package/DEBIAN/control
          echo "Priority: optional" >> package/DEBIAN/control
          echo "Architecture: amd64" >> package/DEBIAN/control
          echo "Maintainer: Notifier Dev <dev@example.com>" >> package/DEBIAN/control
          echo "Description: Cross-platform system tray notifier." >> package/DEBIAN/control
          cp dist/notifier package/usr/local/bin/notifier
          chmod 755 package/usr/local/bin/notifier
          dpkg-deb --build package
          mv package.deb notifier_1.0.0_amd64.deb

      - name: Upload Debian Package
        uses: actions/upload-artifact@v4
        with:
          name: notifier-ubuntu-deb
          path: notifier_1.0.0_amd64.deb

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
          pip install pyinstaller

      - name: Build app bundle
        run: |
          pyinstaller --noconfirm --windowed --icon=pm.icns --name=notifier app.py

      - name: Create .app structure
        run: |
          mkdir -p dmg/notifier.app/Contents/MacOS
          cp dist/notifier dmg/notifier.app/Contents/MacOS/notifier
          mkdir -p dmg/notifier.app/Contents/Resources
          cp pm.icns dmg/notifier.app/Contents/Resources/pm.icns

          cat <<EOF > dmg/notifier.app/Contents/Info.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
          "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>CFBundleName</key>
            <string>Notifier</string>
            <key>CFBundleIdentifier</key>
            <string>com.example.notifier</string>
            <key>CFBundleVersion</key>
            <string>1.0.0</string>
            <key>CFBundleExecutable</key>
            <string>notifier</string>
            <key>CFBundleIconFile</key>
            <string>pm</string>
          </dict>
          </plist>
          EOF

      - name: Create DMG
        run: |
          hdiutil create -volname "Notifier" -srcfolder dmg -ov -format UDZO notifier-1.0.0.dmg

      - name: Upload macOS DMG
        uses: actions/upload-artifact@v4
        with:
          name: notifier-macos-dmg
          path: notifier-1.0.0.dmg
