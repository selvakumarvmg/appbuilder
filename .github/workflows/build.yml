name: Build PremediaApp

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Verify repository files
        run: |
          dir icons\premedia.ico terms.txt license.txt || echo "One or more files missing"

      - name: Install core dependencies
        timeout-minutes: 20
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify Python dependencies
        run: |
          pip list

      - name: Install PyInstaller
        run: |
          pip install pyinstaller==6.14.1

      - name: Build with PyInstaller
        timeout-minutes: 60
        run: |
          pyinstaller --noconfirm --onefile --windowed --icon=icons/premedia.ico `
            --add-data "icons;icons" `
            --add-data "terms.txt;." `
            --add-data "license.txt;." `
            --hidden-import=paramiko `
            --hidden-import=tzdata `
            --exclude-module=tkinter `
            --exclude-module=numpy `
            --exclude-module=matplotlib `
            --name PremediaApp app.py --log-level DEBUG

      - name: Debug PyInstaller output
        run: |
          dir dist
          dir dist\PremediaApp.exe || echo "PremediaApp.exe not found"

      - name: Verify Inno Setup
        run: |
          iscc /? || echo "Inno Setup not found"

      - name: Package Windows installer
        run: |
          iscc installer/installer.iss || echo "Inno Setup failed, check logs"

      - name: Debug Output folder
        run: |
          dir Output
          dir Output\PremediaApp-Setup.exe || echo "PremediaApp-Setup.exe not found"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PremediaApp-Windows-${{ matrix.python-version }}
          path: Output/PremediaApp-Setup.exe
          retention-days: 5

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Verify repository files
        run: |
          ls -l icons/premedia.icns terms.txt license.txt || echo "One or more files missing"

      - name: Install dependencies
        env:
          ARCHFLAGS: "-arch x86_64 -arch arm64"
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install --force-reinstall --no-binary cffi cffi==1.17.1
          pip install --force-reinstall --no-binary Pillow Pillow==11.3.0

      - name: Verify Python dependencies
        run: |
          pip list

      - name: Install PyInstaller
        run: |
          pip install pyinstaller==6.14.1

      - name: Run tests
        continue-on-error: true
        run: |
          python -m unittest discover -s tests -p "test_*.py" || echo "Tests failed, continuing to build..."

      - name: Build with PyInstaller
        timeout-minutes: 60
        run: |
          pyinstaller --noconfirm --windowed --icon=icons/premedia.icns \
            --add-data "icons:icons" \
            --add-data "terms.txt:." \
            --add-data "license.txt:." \
            --hidden-import=paramiko \
            --hidden-import=tzdata \
            --exclude-module=tkinter \
            --exclude-module=numpy \
            --exclude-module=matplotlib \
            --target-arch universal2 \
            --name PremediaApp app.py --log-level DEBUG

      - name: Debug .app bundle contents
        run: |
          ls -R dist/PremediaApp.app || echo "PremediaApp.app not found"

      - name: Update Info.plist
        run: |
          plutil -replace CFBundleIconFile -string premedia.icns dist/PremediaApp.app/Contents/Info.plist
          plutil -replace NSHighResolutionCapable -bool true dist/PremediaApp.app/Contents/Info.plist
          plutil -replace CFBundleIdentifier -string com.vmgpremedia.PremediaApp dist/PremediaApp.app/Contents/Info.plist
          plutil -replace CFBundleName -string PremediaApp dist/PremediaApp.app/Contents/Info.plist
          plutil -replace CFBundleVersion -string 1.0.0 dist/PremediaApp.app/Contents/Info.plist

      - name: Install create-dmg
        run: |
          brew install create-dmg

      - name: Create DMG
        run: |
          mkdir -p Output
          create-dmg \
            --volname "PremediaApp" \
            --volicon "icons/premedia.icns" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "PremediaApp.app" 200 190 \
            --app-drop-link 600 185 \
            Output/PremediaApp.dmg \
            dist/PremediaApp.app || echo "create-dmg failed, check logs"

      - name: Debug Output folder
        run: |
          ls -l Output/
          test -f Output/PremediaApp.dmg && echo "PremediaApp.dmg found" || echo "PremediaApp.dmg not found"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PremediaApp-macOS
          path: Output/PremediaApp.dmg
          retention-days: 5

  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install system dependencies
        timeout-minutes: 20
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev python3-pip libgtk-3-dev dpkg-dev
          dpkg -l | grep libgtk-3-dev || echo "libgtk-3-dev not installed"

      - name: Verify repository files
        run: |
          ls -l icons/premedia.png terms.txt license.txt || echo "One or more files missing"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify Python dependencies
        run: |
          pip list

      - name: Install PyInstaller
        run: |
          pip install pyinstaller==6.14.1

      - name: Run tests
        continue-on-error: true
        run: |
          python -m unittest discover -s tests -p "test_*.py" || echo "Tests failed, continuing to build..."

      - name: Build with PyInstaller
        timeout-minutes: 60
        run: |
          pyinstaller --noconfirm --onefile --windowed --icon=icons/premedia.png \
            --add-data "icons:icons" \
            --add-data "terms.txt:." \
            --add-data "license.txt:." \
            --hidden-import=paramiko \
            --hidden-import=tzdata \
            --exclude-module=tkinter \
            --exclude-module=numpy \
            --exclude-module=matplotlib \
            --name PremediaApp app.py --log-level DEBUG

      - name: Debug PyInstaller output
        run: |
          ls -l dist/
          test -f dist/PremediaApp && echo "PremediaApp executable found" || echo "PremediaApp executable not found"

      - name: Set executable permissions
        run: |
          chmod +x dist/PremediaApp || echo "PremediaApp not found"

      - name: Verify dpkg-deb
        run: |
          dpkg-deb --version || echo "dpkg-deb not installed"

      - name: Create .deb package
        run: |
          mkdir -p Output
          mkdir -p dist/debian/usr/bin
          mkdir -p dist/debian/usr/share/applications
          mkdir -p dist/debian/usr/share/icons/hicolor/scalable/apps
          cp dist/PremediaApp dist/debian/usr/bin/ || echo "Executable not found"
          cp icons/premedia.png dist/debian/usr/share/icons/hicolor/scalable/apps/premedia.png || echo "Icon file not found"
          cp terms.txt dist/debian/usr/bin/ || echo "terms.txt not found"
          cp license.txt dist/debian/usr/bin/ || echo "license.txt not found"
          mkdir -p dist/debian/DEBIAN
          echo "Package: premediaapp" > dist/debian/DEBIAN/control
          echo "Version: 1.0.0" >> dist/debian/DEBIAN/control
          echo "Architecture: amd64" >> dist/debian/DEBIAN/control
          echo "Maintainer: VMG Premedia <support@vmgpremedia.com>" >> dist/debian/DEBIAN/control
          echo "Depends: python3, libgtk-3-0" >> dist/debian/DEBIAN/control
          echo "Description: PremediaApp for image retouching" >> dist/debian/DEBIAN/control
          echo "[Desktop Entry]
          Name=PremediaApp
          Exec=/usr/bin/PremediaApp
          Type=Application
          Icon=premedia
          Terminal=false
          Categories=Utility;" > dist/debian/usr/share/applications/PremediaApp.desktop
          dpkg-deb --build dist/debian Output/PremediaApp.deb || echo "dpkg-deb failed, check logs"

      - name: Debug debian folder
        run: |
          ls -R dist/debian || echo "debian folder not found"
          cat dist/debian/DEBIAN/control || echo "control file not found"

      - name: Debug Output folder
        run: |
          ls -l Output/
          test -f Output/PremediaApp.deb && echo "PremediaApp.deb found" || echo "PremediaApp.deb not found"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PremediaApp-Ubuntu
          path: Output/PremediaApp.deb
          retention-days: 5