name: Build PremediaApp (macOS & Windows)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: 🛠️ Build macOS x86_64 App
    runs-on: macos-13

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9.13'
        architecture: 'x64'

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller>=6.14.0,<7.0.0 dmgbuild>=1.0.0,<2.0.0
        pip list > installed_packages.txt
        python -c "import PySide6; import os; print(os.path.join(os.path.dirname(PySide6.__file__), 'plugins', 'platforms'))" > plugins_path.txt
        cat plugins_path.txt
        ls -ld "$(cat plugins_path.txt)" || echo "❌ PySide6 plugins directory missing"

    - name: Show installed packages
      run: cat installed_packages.txt

    - name: Verify required files
      run: |
        test -f app.py || (echo "❌ app.py missing" && exit 1)
        test -f login.py || (echo "❌ login.py missing" && exit 1)
        test -f icons/premedia.icns || (echo "❌ premedia.icns missing" && exit 1)
        test -f icons/photoshop.png || (echo "❌ photoshop.png missing" && exit 1)
        test -f icons/folder.png || (echo "❌ folder.png missing" && exit 1)
        test -f icons/premedia.png || (echo "❌ premedia.png missing" && exit 1)
        test -f icons/vmg-premedia-logo.png || (echo "❌ vmg-premedia-logo.png missing" && exit 1)
        test -f terms.txt || (echo "❌ terms.txt missing" && exit 1)
        test -f license.txt || (echo "❌ license.txt missing" && exit 1)
        test -f login.ui || (echo "❌ login.ui missing" && exit 1)
        test -f premediaapp.ui || (echo "❌ premediaapp.ui missing" && exit 1)
        test -f icons.qrc || (echo "❌ icons.qrc missing" && exit 1)
        test -f icons_rc.py || (echo "❌ icons_rc.py missing" && exit 1)
        test -f installer/dmg-settings.py || (echo "❌ dmg-settings.py missing" && exit 1)
        test -f installer-assets/dmg-background.bmp || (echo "❌ DMG background missing" && exit 1)
        test -f runtime-hook.py || (echo "❌ runtime-hook.py missing" && exit 1)

    - name: Build App with PyInstaller
      run: |
        python -c "import PySide6; import os; plugins_path = os.path.join(os.path.dirname(PySide6.__file__), 'plugins'); print(plugins_path)" > plugins_path.txt
        export PYSIDE6_PLUGINS=$(cat plugins_path.txt)
        ls -ld "$PYSIDE6_PLUGINS/platforms" || export PYSIDE6_PLUGINS=/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/PySide6/plugins
        ls -ld "$PYSIDE6_PLUGINS/platforms" || (echo "❌ Platforms directory missing" && exit 1)
        ls -ld "$PYSIDE6_PLUGINS/imageformats" || (echo "❌ Imageformats directory missing" && exit 1)
        pyinstaller --log-level=DEBUG app.spec > pyinstaller.log 2>&1 || (echo "PyInstaller failed" && cat pyinstaller.log && exit 1)
        echo "📁 dist/ contents:"
        ls -lh dist

    - name: Upload PyInstaller log
      uses: actions/upload-artifact@v4
      with:
        name: pyinstaller-log-macos
        path: pyinstaller.log
      if: always()

    - name: Sign App
      run: |
        codesign --deep --force --verbose --sign - dist/PremediaApp.app
      if: ${{ env.APPLE_CERTIFICATE == '' }}

    - name: Sign App with Developer ID
      run: |
        codesign --deep --force --verbose --sign "Developer ID Application: Your Name" --entitlements entitlements.plist dist/PremediaApp.app
      if: ${{ env.APPLE_CERTIFICATE != '' }}
      env:
        APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}

    - name: Inspect built .app
      run: |
        du -sh dist/PremediaApp.app
        find dist/PremediaApp.app

    - name: Build DMG
      run: |
        mkdir -p dmg-build
        cp -R dist/PremediaApp.app dmg-build/
        dmgbuild -s installer/dmg-settings.py \
                 -D app_path="dmg-build/PremediaApp.app" \
                 "PremediaApp" PremediaApp.dmg

    - name: Upload DMG Artifact
      uses: actions/upload-artifact@v4
      with:
        name: PremediaApp-macos-dmg
        path: PremediaApp.dmg
        retention-days: 7

  build-windows:
    name: 🪟 Build Windows EXE Installer
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9.13'
        architecture: 'x64'

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller>=6.14.0,<7.0.0
        pip list > installed_packages.txt
        python -c "import PySide6; import os; print(os.path.join(os.path.dirname(PySide6.__file__), 'plugins', 'platforms'))" > plugins_path.txt
        type plugins_path.txt
        dir type plugins_path.txt || echo "❌ PySide6 plugins directory missing"
      shell: cmd

    - name: Show installed packages
      run: type installed_packages.txt
      shell: cmd
      if: always()

    - name: Verify required files exist
      run: |
        dir app.py || (echo "❌ app.py missing" && exit 1)
        dir login.py || (echo "❌ login.py missing" && exit 1)
        dir icons\premedia.ico || (echo "❌ premedia.ico missing" && exit 1)
        dir icons\photoshop.png || (echo "❌ photoshop.png missing" && exit 1)
        dir icons\folder.png || (echo "❌ folder.png missing" && exit 1)
        dir icons\premedia.png || (echo "❌ premedia.png missing" && exit 1)
        dir icons\vmg-premedia-logo.png || (echo "❌ vmg-premedia-logo.png missing" && exit 1)
        dir terms.txt || (echo "❌ terms.txt missing" && exit 1)
        dir license.txt || (echo "❌ license.txt missing" && exit 1)
        dir login.ui || (echo "❌ login.ui missing" && exit 1)
        dir premediaapp.ui || (echo "❌ premediaapp.ui missing" && exit 1)
        dir icons.qrc || (echo "❌ icons.qrc missing" && exit 1)
        dir icons_rc.py || (echo "❌ icons_rc.py missing" && exit 1)
        dir installer\installer.iss || (echo "❌ installer.iss missing" && exit 1)
        dir runtime-hook.py || (echo "❌ runtime-hook.py missing" && exit 1)
      shell: cmd

    - name: Build GUI Executable
      run: |
        echo ===== Building with PyInstaller =====
        python -c "import PySide6; print(PySide6.__file__)" > pyside6_path.txt
        set /p PYSIDE6_PATH=<pyside6_path.txt
        echo PYSIDE6_PATH=%PYSIDE6_PATH%
        set PYSIDE6_PLUGINS=%PYSIDE6_PATH%\..\PySide6\plugins
        echo PYSIDE6_PLUGINS=%PYSIDE6_PLUGINS%
        if not exist "%PYSIDE6_PLUGINS%\platforms" (
          echo "❌ Platforms directory missing, using fallback path"
          set PYSIDE6_PLUGINS=C:\hostedtoolcache\windows\Python\3.9.13\x64\Lib\site-packages\PySide6\plugins
        )
        dir "%PYSIDE6_PLUGINS%\platforms" || (echo "❌ Platforms directory missing" && exit 1)
        dir "%PYSIDE6_PLUGINS%\imageformats" || (echo "❌ Imageformats directory missing" && exit 1)
        echo Verifying input files...
        dir app.py || (echo "❌ app.py missing" && exit 1)
        dir icons\premedia.ico || (echo "❌ premedia.ico missing" && exit 1)
        dir icons\photoshop.png || (echo "❌ photoshop.png missing" && exit 1)
        dir icons\folder.png || (echo "❌ folder.png missing" && exit 1)
        dir icons\premedia.png || (echo "❌ premedia.png missing" && exit 1)
        dir icons\vmg-premedia-logo.png || (echo "❌ vmg-premedia-logo.png missing" && exit 1)
        dir terms.txt || (echo "❌ terms.txt missing" && exit 1)
        dir license.txt || (echo "❌ license.txt missing" && exit 1)
        dir login.ui || (echo "❌ login.ui missing" && exit 1)
        dir premediaapp.ui || (echo "❌ premediaapp.ui missing" && exit 1)
        dir icons.qrc || (echo "❌ icons.qrc missing" && exit 1)
        dir icons_rc.py || (echo "❌ icons_rc.py missing" && exit 1)
        dir login.py || (echo "❌ login.py missing" && exit 1)
        dir runtime-hook.py || (echo "❌ runtime-hook.py missing" && exit 1)
        echo Running PyInstaller...
        pyinstaller --log-level=DEBUG --noconfirm --windowed --onedir ^
          --name PremediaApp ^
          --icon=icons\premedia.ico ^
          --add-data "icons\premedia.ico;icons" ^
          --add-data "icons\photoshop.png;icons" ^
          --add-data "icons\folder.png;icons" ^
          --add-data "icons\premedia.png;icons" ^
          --add-data "icons\vmg-premedia-logo.png;icons" ^
          --add-data "terms.txt;." ^
          --add-data "license.txt;." ^
          --add-data "login.ui;." ^
          --add-data "premediaapp.ui;." ^
          --add-data "icons.qrc;." ^
          --add-data "icons_rc.py;." ^
          --add-data "login.py;." ^
          --add-data "%PYSIDE6_PLUGINS%\platforms;PySide6\plugins\platforms" ^
          --add-data "%PYSIDE6_PLUGINS%\imageformats;PySide6\plugins\imageformats" ^
          --hidden-import=paramiko ^
          --hidden-import=tzdata ^
          --hidden-import=PySide6.QtWidgets ^
          --hidden-import=PySide6.QtCore ^
          --hidden-import=PySide6.QtGui ^
          --hidden-import=PySide6.uic ^
          --hidden-import=PIL.Image ^
          --hidden-import=login ^
          --hidden-import=icons_rc ^
          --collect-submodules PySide6 ^
          --runtime-hook=runtime-hook.py ^
          app.py > pyinstaller.log 2>&1 || (echo "PyInstaller failed" && type pyinstaller.log && exit 1)
      shell: cmd

    - name: Show PyInstaller log
      run: type pyinstaller.log || echo "Log missing"
      shell: cmd
      if: always()

    - name: Upload PyInstaller log
      uses: actions/upload-artifact@v4
      with:
        name: pyinstaller-log-windows
        path: pyinstaller.log
      if: always()

    - name: Check if EXE exists
      run: |
        echo Checking dist\PremediaApp\PremediaApp.exe
        dir dist\PremediaApp
        if not exist dist\PremediaApp\PremediaApp.exe (
          echo ERROR: Executable not found!
          exit 1
        )
      shell: cmd

    - name: Install Inno Setup
      run: choco install innosetup --no-progress --yes --force
      shell: cmd

    - name: Verify Inno Setup installed
      run: where iscc || echo "ISCC not found!"
      shell: cmd

    - name: Build Installer with Inno Setup
      run: |
        echo Running Inno Setup compiler...
        iscc installer\installer.iss
        if not exist Output\PremediaApp-Setup.exe (
          echo ERROR: Installer not created!
          exit 1
        )
      shell: cmd

    - name: Upload Installer Artifact
      uses: actions/upload-artifact@v4
      with:
        name: PremediaApp-Windows-Installer
        path: Output/PremediaApp-Setup.exe
        retention-days: 7