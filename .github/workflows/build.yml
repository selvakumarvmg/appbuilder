name: build-all-platforms

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-windows:
    name: Build on Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller
          echo "Dependencies installed."

      - name: Show directory structure
        run: tree /F

      - name: Build EXE with PyInstaller
        run: |
          pyinstaller app.spec
          echo "PyInstaller build complete."

      - name: Install Inno Setup
        run: choco install innosetup

      - name: Run Inno Setup compiler
        run: |
          iscc installer/installer.iss || echo "Inno Setup failed, check logs"
          echo "Inno Setup packaging done."

      - name: List Output Directory
        run: |
          echo "Contents of Output directory:"
          dir Output
          echo "Contents of dist directory:"
          dir dist

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PremediaApp-Windows
          path: |
            Output/PremediaApp-Setup.exe
            dist/PremediaApp.exe

  build-macos:
    name: Build on macOS
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt pyinstaller

      - name: Build .app with PyInstaller
        run: |
          pyinstaller app.spec
          echo "Mac build complete."

      - name: Create DMG file
        run: |
          mkdir dmg-root
          cp -R dist/PremediaApp.app dmg-root/
          hdiutil create -volname "PremediaApp" -srcfolder dmg-root -ov -format UDZO PremediaApp.dmg
          echo "DMG created."

      - name: Show DMG structure
        run: ls -R dmg-root

      - name: Upload macOS Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PremediaApp-macOS
          path: |
            dist/PremediaApp.app
            PremediaApp.dmg

  build-ubuntu:
    name: Build on Ubuntu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install system & Python dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libxcb-cursor0 libxcb-xinerama0
          pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Show directory structure
        run: tree -a -L 3

      - name: Build binary with PyInstaller
        run: |
          pyinstaller app.spec
          echo "Ubuntu PyInstaller build complete."

      - name: Make .deb package
        run: |
          chmod +x install_ubuntu.sh
          ./install_ubuntu.sh
          echo "Debian package built."

      - name: Upload Ubuntu Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PremediaApp-Ubuntu
          path: |
            dist/PremediaApp
            *.deb
